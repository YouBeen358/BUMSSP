# Load the cleaned dataset
strawberry_clean <- read_csv("strawberries_cleaned.csv")
# Extract chemical classifications (Use) from 'Domain' column
strawberry_clean <- strawberry_clean %>%
mutate(
Use = case_when(
str_detect(Domain, "FUNGICIDE") ~ "Fungicide",
str_detect(Domain, "INSECTICIDE") ~ "Insecticide",
str_detect(Domain, "HERBICIDE") ~ "Herbicide",
TRUE ~ "Other"
),
# Extract specific chemical names from the 'Domain Category' column
Chemical_Name = str_extract(`Domain_Category`, "\\((.*?)\\)"),
Chemical_Name = str_replace_all(Chemical_Name, "[()]", "")  # Remove parentheses
)
# Filter out rows where 'Use' or 'Chemical_Name' are NA
strawberry_clean <- strawberry_clean %>%
filter(!is.na(Use) & !is.na(Chemical_Name))
# Count the prevalence of each chemical category
chemical_summary <- strawberry_clean %>%
group_by(Use) %>%
summarise(Count = n()) %>%
arrange(desc(Count))
# Print the summary of chemical types
print(chemical_summary)
# Visualization: Bar chart of chemical types
ggplot(chemical_summary, aes(x = reorder(Use, -Count), y = Count, fill = Use)) +
geom_bar(stat = "identity") +
labs(title = "Prevalence of Chemical Types Used on Strawberries",
x = "Chemical Type",
y = "Count") +
theme_minimal()
# Visualization: Top chemicals within each category
top_chemicals <- strawberry_clean %>%
group_by(Use, Chemical_Name) %>%
summarise(Frequency = n()) %>%
arrange(desc(Frequency)) %>%
slice_max(Frequency, n = 5)  # Top 5 chemicals per category
ggplot(top_chemicals, aes(x = reorder(Chemical_Name, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity") +
facet_wrap(~ Use, scales = "free", nrow = 2) +  # Arrange categories in 2 rows for better spacing
labs(title = "Top Chemicals by Category",
x = "Chemical Name",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30, hjust = 1, size = 8),  # Adjust text angle and size
axis.text.y = element_text(size = 8),
strip.text = element_text(size = 10)) +  # Increase facet label size for clarity
coord_flip()  # Flip coordinates for horizontal bars
# Display the aggregated data to verify its content
print(acres_data)
# Filter data for acres grown in 2022 and group by state
acres_by_state <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES GROWN"), Year == 2022) %>%
group_by(State) %>%
summarise(Total_Acres = sum(Value, na.rm = TRUE))
# Convert 'Value' column to numeric, replacing '(D)' or other placeholders with NA
strawberry_clean <- strawberry_clean %>%
mutate(Value = ifelse(Value %in% c("(D)", "(NA)"), NA, as.numeric(Value)))
# Display the aggregated data to verify its content
print(acres_data)
# Filter data for acres grown in 2022 and group by state
acres_by_state <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES GROWN"), Year == 2022) %>%
group_by(State) %>%
summarise(Total_Acres = sum(Value, na.rm = TRUE))
# Plot total acres grown by state
ggplot(acres_by_state, aes(x = reorder(State, -Total_Acres), y = Total_Acres)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Total Acres Grown for Strawberries by State (2022)",
x = "State",
y = "Total Acres Grown") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Filter data for bearing and non-bearing acres in 2022
bearing_acres <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES BEARING"), Year == 2022) %>%
summarise(Total_Bearing_Acres = sum(Value, na.rm = TRUE))
non_bearing_acres <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES NON-BEARING"), Year == 2022) %>%
summarise(Total_Non_Bearing_Acres = sum(Value, na.rm = TRUE))
# Combine the two into a single data frame
acres_type <- data.frame(
Type = c("Bearing", "Non-Bearing"),
Acres = c(bearing_acres$Total_Bearing_Acres, non_bearing_acres$Total_Non_Bearing_Acres)
)
# Plot bearing vs. non-bearing acres
ggplot(acres_type, aes(x = Type, y = Acres, fill = Type)) +
geom_bar(stat = "identity") +
labs(title = "Bearing vs. Non-Bearing Acres for Strawberries (2022)",
x = "Type",
y = "Total Acres") +
theme_minimal()
# Extract chemical classifications (Use) from 'Domain' column
strawberry_clean <- strawberry_clean %>%
mutate(
Use = case_when(
str_detect(Domain, "FUNGICIDE") ~ "Fungicide",
str_detect(Domain, "INSECTICIDE") ~ "Insecticide",
str_detect(Domain, "HERBICIDE") ~ "Herbicide",
TRUE ~ "Other"
),
# Extract specific chemical names from the 'Domain Category' column
Chemical_Name = str_extract(`Domain_Category`, "\\((.*?)\\)"),
Chemical_Name = str_replace_all(Chemical_Name, "[()]", "")  # Remove parentheses
)
# Filter out rows where 'Use' or 'Chemical_Name' are NA
strawberry_clean <- strawberry_clean %>%
filter(!is.na(Use) & !is.na(Chemical_Name))
# Group by State and Chemical Use
chemicals_by_state <- strawberry_clean %>%
group_by(State, Use) %>%
summarise(Frequency = n()) %>%
arrange(desc(Frequency))
# Plot the distribution of chemical types by state
ggplot(chemicals_by_state, aes(x = reorder(State, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Chemical Use Distribution by State",
x = "State",
y = "Frequency of Chemical Use",
fill = "Chemical Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Group by State and Chemical Use
chemicals_by_state <- strawberry_clean %>%
group_by(State, Use) %>%
summarise(Frequency = n()) %>%
arrange(desc(Frequency))
# Plot the distribution of chemical types by state
ggplot(chemicals_by_state, aes(x = reorder(State, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Chemical Use Distribution by State",
x = "State",
y = "Frequency of Chemical Use",
fill = "Chemical Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Group by State and Chemical Use
chemicals_by_state <- strawberry_clean %>%
group_by(State, Use) %>%
summarise(Frequency = n()) %>%
arrange(desc(Frequency))
# Plot the distribution of chemical types by state excluding "Other"
ggplot(chemicals_by_state, aes(x = reorder(State, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Chemical Use Distribution by State (Excluding Other)",
x = "State",
y = "Frequency of Chemical Use",
fill = "Chemical Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Filter out rows where 'Use' or 'Chemical_Name' are NA and exclude "Other"
strawberry_clean_filtered <- strawberry_clean %>%
filter(!is.na(Use) & !is.na(Chemical_Name) & Use != "Other")
# Filter out states that only have "Other" chemical types
states_with_other_only <- strawberry_clean %>%
filter(Use == "Other") %>%
distinct(State)
states_to_keep <- strawberry_clean_filtered %>%
filter(!State %in% states_with_other_only$State) %>%
distinct(State)
strawberry_clean_final <- strawberry_clean_filtered %>%
filter(State %in% states_to_keep$State)
# Group by State and Chemical Use
chemicals_by_state <- strawberry_clean_final %>%
group_by(State, Use) %>%
summarise(Frequency = n()) %>%
arrange(desc(Frequency))
# Plot the distribution of chemical types by state excluding "Other" and states that only use "Other"
ggplot(chemicals_by_state, aes(x = reorder(State, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Chemical Use Distribution by State (Excluding Other)",
x = "State",
y = "Frequency of Chemical Use",
fill = "Chemical Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readr)
library(stringr)
# Load the cleaned dataset
strawberry_clean <- read_csv("strawberries_cleaned.csv")
# Extract chemical classifications (Use) from 'Domain' column
strawberry_clean <- strawberry_clean %>%
mutate(
Use = case_when(
str_detect(Domain, "FUNGICIDE") ~ "Fungicide",
str_detect(Domain, "INSECTICIDE") ~ "Insecticide",
str_detect(Domain, "HERBICIDE") ~ "Herbicide",
TRUE ~ "Other"
),
# Extract specific chemical names from the 'Domain Category' column
Chemical_Name = str_extract(`Domain_Category`, "\\((.*?)\\)"),
Chemical_Name = str_replace_all(Chemical_Name, "[()]", "")  # Remove parentheses
)
# Filter out rows where 'Use' or 'Chemical_Name' are NA and exclude "Other"
strawberry_clean_filtered <- strawberry_clean %>%
filter(!is.na(Use) & !is.na(Chemical_Name) & Use != "Other")
# Filter out states that only have "Other" chemical types
states_with_other_only <- strawberry_clean %>%
filter(Use == "Other") %>%
distinct(State)
states_to_keep <- strawberry_clean_filtered %>%
filter(!State %in% states_with_other_only$State) %>%
distinct(State)
strawberry_clean_final <- strawberry_clean_filtered %>%
filter(State %in% states_to_keep$State)
# Group by State and Chemical Use
chemicals_by_state <- strawberry_clean_final %>%
group_by(State, Use) %>%
summarise(Frequency = n()) %>%
arrange(desc(Frequency))
# Plot the distribution of chemical types by state excluding "Other" and states that only use "Other"
ggplot(chemicals_by_state, aes(x = reorder(State, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Chemical Use Distribution by State (Excluding Other)",
x = "State",
y = "Frequency of Chemical Use",
fill = "Chemical Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
strawberry_clean_filtered <- strawberry_clean %>%
filter(Use %in% c("Fungicide", "Insecticide", "Herbicide"))
# Group by State and Chemical Use
chemicals_by_state <- strawberry_clean_filtered %>%
group_by(State, Use) %>%
summarise(Frequency = n(), .groups = 'drop')
# Plot the distribution of chemical types by state excluding "Other"
ggplot(chemicals_by_state, aes(x = reorder(State, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Chemical Use Distribution by State (Fungicide, Insecticide, Herbicide Only)",
x = "State",
y = "Frequency of Chemical Use",
fill = "Chemical Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(dplyr)
library(tidyr)
library(stringr)
library(readr)
# Load the dataset
strawberries_data <- read_csv("strawberries25_v.csv")
# View the structure of the dataset
str(strawberries_data)
# Check the first few rows
head(strawberries_data)
# Get a summary of the dataset
summary(strawberries_data)
# Rename columns to more readable names if necessary
colnames(strawberries_data) <- str_replace_all(colnames(strawberries_data), "\\s+", "_")
# Check for missing values in each column
colSums(is.na(strawberries_data))
# Fill missing values (example: filling with median for numerical columns)
strawberries_data <- strawberries_data %>%
mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
# For categorical variables, you may fill missing values with a placeholder like "Unknown"
strawberries_data <- strawberries_data %>%
mutate(across(where(is.character), ~ ifelse(is.na(.), "Unknown", .)))
# List all column names
colnames(strawberries_data)
# Drop irrelevant columns for chemical analysis using backticks for special characters
strawberries_data <- strawberries_data %>%
select(-c(`Ag_District`, `Ag_District_Code`, `County`, `County_ANSI`, `Zip_Code`, `watershed_code`, `Watershed`, `CV_(%)`))
# Filter out rows based on specific conditions if needed (e.g., removing entries with irrelevant regions)
strawberries_data <- strawberries_data %>%
filter(!Region %in% c("Irrelevant_Region1", "Irrelevant_Region2"))
# Step 2: Clean and organize the 'Use', 'Name', and 'Code' columns, and remove 'Domain' and 'Domain_Category'
strawberry_clean <- strawberries_data %>%
# Extract 'Use' from the 'Domain' column
mutate(
Use = case_when(
str_detect(`Domain`, "FUNGICIDE") ~ "FUNGICIDE",
str_detect(`Domain`, "INSECTICIDE") ~ "INSECTICIDE",
str_detect(`Domain`, "HERBICIDE") ~ "HERBICIDE",
TRUE ~ NA_character_
),
# Extract 'Name' from the 'Domain_Category' column, removing the '= CODE' part
Name = str_extract(`Domain_Category`, "\\((.*?)\\)"),
Name = str_replace_all(Name, " = \\d+", ""),  # Remove the '= CODE' part
Name = str_replace_all(Name, "[()]", ""),    # Remove parentheses around 'Name'
# Extract 'Code' from the 'Domain_Category' column (after the '=' sign)
Code = str_extract(`Domain_Category`, "\\d+"),  # Extract only the numeric part of the code
Code = str_trim(Code)  # Clean up any remaining whitespace
) %>%
# Remove rows where 'Use', 'Name', or 'Code' are NA
drop_na(Use, Name, Code) %>%
# Remove the unwanted 'Domain' and 'Domain_Category' columns
select(-Domain, -`Domain_Category`)
# Detect and remove duplicates
strawberries_data <- strawberries_data %>%
distinct()
# Save the cleaned dataset
write_csv(strawberries_data, "strawberries_cleaned.csv")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readr)
library(stringr)
# Load the cleaned dataset
strawberry_clean <- read_csv("strawberries_cleaned.csv")
# Extract chemical classifications (Use) from 'Domain' column
strawberry_clean <- strawberry_clean %>%
mutate(
Use = case_when(
str_detect(Domain, "FUNGICIDE") ~ "Fungicide",
str_detect(Domain, "INSECTICIDE") ~ "Insecticide",
str_detect(Domain, "HERBICIDE") ~ "Herbicide",
TRUE ~ "Other"
),
# Extract specific chemical names from the 'Domain Category' column
Chemical_Name = str_extract(`Domain_Category`, "\\((.*?)\\)"),
Chemical_Name = str_replace_all(Chemical_Name, "[()]", "")  # Remove parentheses
)
# Filter out rows where 'Use' or 'Chemical_Name' are NA
strawberry_clean <- strawberry_clean %>%
filter(!is.na(Use) & !is.na(Chemical_Name))
# Count the prevalence of each chemical category
chemical_summary <- strawberry_clean %>%
group_by(Use) %>%
summarise(Count = n()) %>%
arrange(desc(Count))
# Print the summary of chemical types
print(chemical_summary)
# Visualization: Bar chart of chemical types
ggplot(chemical_summary, aes(x = reorder(Use, -Count), y = Count, fill = Use)) +
geom_bar(stat = "identity") +
labs(title = "Prevalence of Chemical Types Used on Strawberries",
x = "Chemical Type",
y = "Count") +
theme_minimal()
# Visualization: Top chemicals within each category
top_chemicals <- strawberry_clean %>%
group_by(Use, Chemical_Name) %>%
summarise(Frequency = n()) %>%
arrange(desc(Frequency)) %>%
slice_max(Frequency, n = 5)  # Top 5 chemicals per category
ggplot(top_chemicals, aes(x = reorder(Chemical_Name, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity") +
facet_wrap(~ Use, scales = "free", nrow = 2) +  # Arrange categories in 2 rows for better spacing
labs(title = "Top Chemicals by Category",
x = "Chemical Name",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30, hjust = 1, size = 8),  # Adjust text angle and size
axis.text.y = element_text(size = 8),
strip.text = element_text(size = 10)) +  # Increase facet label size for clarity
coord_flip()  # Flip coordinates for horizontal bars
# Convert 'Value' column to numeric, replacing '(D)' or other placeholders with NA
strawberry_clean <- strawberry_clean %>%
mutate(Value = ifelse(Value %in% c("(D)", "(NA)"), NA, as.numeric(Value)))
# Display the aggregated data to verify its content
print(acres_data)
# Filter data for acres grown in 2022 and group by state
acres_by_state <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES GROWN"), Year == 2022) %>%
group_by(State) %>%
summarise(Total_Acres = sum(Value, na.rm = TRUE))
# Plot total acres grown by state
ggplot(acres_by_state, aes(x = reorder(State, -Total_Acres), y = Total_Acres)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Total Acres Grown for Strawberries by State (2022)",
x = "State",
y = "Total Acres Grown") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Filter data for bearing and non-bearing acres in 2022
bearing_acres <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES BEARING"), Year == 2022) %>%
summarise(Total_Bearing_Acres = sum(Value, na.rm = TRUE))
non_bearing_acres <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES NON-BEARING"), Year == 2022) %>%
summarise(Total_Non_Bearing_Acres = sum(Value, na.rm = TRUE))
# Combine the two into a single data frame
acres_type <- data.frame(
Type = c("Bearing", "Non-Bearing"),
Acres = c(bearing_acres$Total_Bearing_Acres, non_bearing_acres$Total_Non_Bearing_Acres)
)
# Plot bearing vs. non-bearing acres
ggplot(acres_type, aes(x = Type, y = Acres, fill = Type)) +
geom_bar(stat = "identity") +
labs(title = "Bearing vs. Non-Bearing Acres for Strawberries (2022)",
x = "Type",
y = "Total Acres") +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readr)
# Convert 'Value' column to numeric, replacing '(D)' or other placeholders with NA
strawberry_clean <- strawberry_clean %>%
mutate(Value = ifelse(Value %in% c("(D)", "(NA)"), NA, as.numeric(Value)))
# Check the structure of the cleaned dataset
str(strawberry_clean)
summary(strawberry_clean)
### Visualization 1: Total Acres Grown for Strawberries by State
acres_data <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES GROWN"))
ggplot(acres_data, aes(x = State, y = Value)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Acres Grown for Strawberries by State",
x = "State",
y = "Acres Grown") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
### Visualization 2: Operations with Area Grown by State
operations_data <- strawberry_clean %>%
filter(str_detect(Data_Item, "OPERATIONS WITH AREA GROWN"))
ggplot(operations_data, aes(x = State, y = Value)) +
geom_bar(stat = "identity", fill = "lightgreen") +
labs(title = "Operations with Area Grown for Strawberries by State",
x = "State",
y = "Number of Operations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
### Visualization 3: Comparison of Bearing vs. Non-Bearing Acres by State
bearing_data <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES BEARING"))
non_bearing_data <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES NON-BEARING"))
combined_acres <- rbind(
bearing_data %>% mutate(Type = "Bearing"),
non_bearing_data %>% mutate(Type = "Non-Bearing")
)
ggplot(combined_acres, aes(x = State, y = Value, fill = Type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Comparison of Bearing and Non-Bearing Acres by State",
x = "State",
y = "Acres",
fill = "Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
strawberry_clean_filtered <- strawberry_clean %>%
filter(Use %in% c("Fungicide", "Insecticide", "Herbicide"))
# Group by State and Chemical Use
chemicals_by_state <- strawberry_clean_filtered %>%
group_by(State, Use) %>%
summarise(Frequency = n(), .groups = 'drop')
# Plot the distribution of chemical types by state excluding "Other"
ggplot(chemicals_by_state, aes(x = reorder(State, -Frequency), y = Frequency, fill = Use)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Chemical Use Distribution by State (Fungicide, Insecticide, Herbicide Only)",
x = "State",
y = "Frequency of Chemical Use",
fill = "Chemical Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Convert 'Value' column to numeric, replacing '(D)' or other placeholders with NA
strawberry_clean <- strawberry_clean %>%
mutate(Value = ifelse(Value %in% c("(D)", "(NA)"), NA, as.numeric(Value)))
# Display the aggregated data to verify its content
print(acres_data)
# Filter data for acres grown in 2022 and group by state
acres_by_state <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES GROWN"), Year == 2022) %>%
group_by(State) %>%
summarise(Total_Acres = sum(Value, na.rm = TRUE))
# Plot total acres grown by state
ggplot(acres_by_state, aes(x = reorder(State, -Total_Acres), y = Total_Acres)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Total Acres Grown for Strawberries by State (2022)",
x = "State",
y = "Total Acres Grown") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Filter data for bearing and non-bearing acres in 2022
bearing_acres <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES BEARING"), Year == 2022) %>%
summarise(Total_Bearing_Acres = sum(Value, na.rm = TRUE))
non_bearing_acres <- strawberry_clean %>%
filter(str_detect(Data_Item, "ACRES NON-BEARING"), Year == 2022) %>%
summarise(Total_Non_Bearing_Acres = sum(Value, na.rm = TRUE))
# Combine the two into a single data frame
acres_type <- data.frame(
Type = c("Bearing", "Non-Bearing"),
Acres = c(bearing_acres$Total_Bearing_Acres, non_bearing_acres$Total_Non_Bearing_Acres)
)
# Plot bearing vs. non-bearing acres
ggplot(acres_type, aes(x = Type, y = Acres, fill = Type)) +
geom_bar(stat = "identity") +
labs(title = "Bearing vs. Non-Bearing Acres for Strawberries (2022)",
x = "Type",
y = "Total Acres") +
theme_minimal()
View(organic_cen)
setwd("~/Desktop/MA615/BUMSSP/MA615/Strawberry3")
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(dplyr)
library(tidyr)
library(stringr)
library(readr)
# Load the dataset
strawberries_data <- read_csv("strawberries25_v.csv")
# Load libraries
library(dplyr)
library(tidyr)
library(stringr)
library(readr)
# Load the dataset
strawberries_data <- read_csv("strawberries25_v.csv")
setwd("~/Desktop/MA615/BUMSSP/MA615/Strawberry3")
# Load libraries
library(dplyr)
library(tidyr)
library(stringr)
library(readr)
# Load the dataset
strawberries_data <- read_csv("strawberries25_v.csv")
